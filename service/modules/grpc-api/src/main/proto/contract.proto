syntax = "proto3";
package dev.fizlrock.waterwalk.grpc;


import "google/protobuf/timestamp.proto";


option java_multiple_files = true;
option java_package = "dev.fizlrock.waterwalk.grpc.api";


// Определяем gRPC-сервис
service WaterwalkService {
  // Location CRUD
  rpc getLocationList(Void) returns (stream LocationDto);
  rpc createLocation(CreateLocationRq) returns (Void);
  rpc deleteLocation(Id) returns (Void);
  rpc updateLocation(LocationDto) returns (Void);

  rpc getRouteList(Void) returns (stream RouteDto);
  rpc createRoute(CreateRouteRq) returns (Void);
  rpc deleteRoute(Id) returns (Void);
  rpc updateRoute(RouteDto) returns (Void);


  
}


// Общее
message Id {
  string id = 1;
}
message Void {
}

// Локации


message CreateLocationRq {
  string name = 1;
  optional string description = 2;
}

message LocationDto {
  string id = 1;
  string name = 2;
  string description = 3;
}

// Маршруты

message CreateRouteRq {
  string locationId = 1;
  string name = 2;
  string comment = 3;
  int64 distance = 4; // дистанция в метрах
  RouteDifficulty difficulty = 5;
  int64 duration = 6; // продолжительность в минутах
  int64 price  = 7;// цена в рублях
} 

message RouteDto {
  string id = 1;
  string name = 2;
  string comment = 3;
  int64 distance = 4; // дистанция в метрах
  RouteDifficulty difficulty = 5;
  int64 duration = 6; // продолжительность в минутах
  int64 price  = 7;// цена в рублях
}


enum RouteDifficulty {
  EASY = 0;
  MEDIUM = 1;
  HARD = 2;
}
