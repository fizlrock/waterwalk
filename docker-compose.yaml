


services:


  # web-ui:
  #   build: ./todo-web-ui
  #   ports:
  #     - "4200:80"

  
  monolith:
    image: fizlrock/todo/backend
    environment:
      ISSUER_LOCATION: http://keycloak:8080/realms/fizlrock
      SPRING_DATA_MONGODB_URI: mongodb://database:27017/todolist
    ports:
      - 9090:9090
    depends_on:
      keycloak:
        condition: service_healthy
      database:
        condition: service_started
    networks:
      - internal-network

  database:
    image: mongodb/mongodb-community-server
    volumes:
    - mongodb_data:/data/db
    networks:
      - internal-network
    ports:
      - "27017:27017"

  envoy:
    image: envoyproxy/envoy:v1.29.0
    container_name: envoy
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - "8080:8080"  # HTTP вход
      - "9901:9901"  # Панель управления Envoy
    networks:
      - internal-network


  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: keycloak
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - internal-network
      
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev --import-realm
    restart: always
    volumes:
      - ./keycloak_realms:/opt/keycloak/data/import
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: secret
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_HOSTNAME: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

    healthcheck:
      test: ["CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/9000&&echo \"GET /health/ready HTTP/1.1\r\nHost: localhost\r\n\r\n\">&3&&grep -q \"HTTP/1.1 200 OK\"<&3'"]
      interval: 10s
      timeout: 5s
      retries: 10  
    ports:
      - "8081:8080"
    networks:
      - internal-network
    depends_on:
      - postgres

volumes:
  pg_data:
  mongodb_data:
    

networks:
  internal-network:
