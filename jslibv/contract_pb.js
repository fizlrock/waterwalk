// source: contract.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq', null, global);
goog.exportSymbol('proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq', null, global);
goog.exportSymbol('proto.dev.fizlrock.waterwalk.grpc.LocationDto', null, global);
goog.exportSymbol('proto.dev.fizlrock.waterwalk.grpc.LocationId', null, global);
goog.exportSymbol('proto.dev.fizlrock.waterwalk.grpc.LocationTree', null, global);
goog.exportSymbol('proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty', null, global);
goog.exportSymbol('proto.dev.fizlrock.waterwalk.grpc.RouteDto', null, global);
goog.exportSymbol('proto.dev.fizlrock.waterwalk.grpc.RouteId', null, global);
goog.exportSymbol('proto.dev.fizlrock.waterwalk.grpc.Void', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dev.fizlrock.waterwalk.grpc.LocationTree.repeatedFields_, null);
};
goog.inherits(proto.dev.fizlrock.waterwalk.grpc.LocationTree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dev.fizlrock.waterwalk.grpc.LocationTree.displayName = 'proto.dev.fizlrock.waterwalk.grpc.LocationTree';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dev.fizlrock.waterwalk.grpc.LocationId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dev.fizlrock.waterwalk.grpc.LocationId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dev.fizlrock.waterwalk.grpc.LocationId.displayName = 'proto.dev.fizlrock.waterwalk.grpc.LocationId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dev.fizlrock.waterwalk.grpc.RouteId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dev.fizlrock.waterwalk.grpc.RouteId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dev.fizlrock.waterwalk.grpc.RouteId.displayName = 'proto.dev.fizlrock.waterwalk.grpc.RouteId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dev.fizlrock.waterwalk.grpc.Void = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dev.fizlrock.waterwalk.grpc.Void, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dev.fizlrock.waterwalk.grpc.Void.displayName = 'proto.dev.fizlrock.waterwalk.grpc.Void';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.displayName = 'proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dev.fizlrock.waterwalk.grpc.LocationDto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dev.fizlrock.waterwalk.grpc.LocationDto.displayName = 'proto.dev.fizlrock.waterwalk.grpc.LocationDto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.displayName = 'proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dev.fizlrock.waterwalk.grpc.RouteDto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dev.fizlrock.waterwalk.grpc.RouteDto.displayName = 'proto.dev.fizlrock.waterwalk.grpc.RouteDto';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.toObject = function(opt_includeInstance) {
  return proto.dev.fizlrock.waterwalk.grpc.LocationTree.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dev.fizlrock.waterwalk.grpc.LocationTree} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.toObject = function(includeInstance, msg) {
  var f, obj = {
    location: (f = msg.getLocation()) && proto.dev.fizlrock.waterwalk.grpc.LocationDto.toObject(includeInstance, f),
    routesList: jspb.Message.toObjectList(msg.getRoutesList(),
    proto.dev.fizlrock.waterwalk.grpc.RouteDto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationTree}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dev.fizlrock.waterwalk.grpc.LocationTree;
  return proto.dev.fizlrock.waterwalk.grpc.LocationTree.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.LocationTree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationTree}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dev.fizlrock.waterwalk.grpc.LocationDto;
      reader.readMessage(value,proto.dev.fizlrock.waterwalk.grpc.LocationDto.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 2:
      var value = new proto.dev.fizlrock.waterwalk.grpc.RouteDto;
      reader.readMessage(value,proto.dev.fizlrock.waterwalk.grpc.RouteDto.deserializeBinaryFromReader);
      msg.addRoutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dev.fizlrock.waterwalk.grpc.LocationTree.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.LocationTree} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dev.fizlrock.waterwalk.grpc.LocationDto.serializeBinaryToWriter
    );
  }
  f = message.getRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.dev.fizlrock.waterwalk.grpc.RouteDto.serializeBinaryToWriter
    );
  }
};


/**
 * optional LocationDto location = 1;
 * @return {?proto.dev.fizlrock.waterwalk.grpc.LocationDto}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.getLocation = function() {
  return /** @type{?proto.dev.fizlrock.waterwalk.grpc.LocationDto} */ (
    jspb.Message.getWrapperField(this, proto.dev.fizlrock.waterwalk.grpc.LocationDto, 1));
};


/**
 * @param {?proto.dev.fizlrock.waterwalk.grpc.LocationDto|undefined} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationTree} returns this
*/
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationTree} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated RouteDto routes = 2;
 * @return {!Array<!proto.dev.fizlrock.waterwalk.grpc.RouteDto>}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.getRoutesList = function() {
  return /** @type{!Array<!proto.dev.fizlrock.waterwalk.grpc.RouteDto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dev.fizlrock.waterwalk.grpc.RouteDto, 2));
};


/**
 * @param {!Array<!proto.dev.fizlrock.waterwalk.grpc.RouteDto>} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationTree} returns this
*/
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.setRoutesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.dev.fizlrock.waterwalk.grpc.RouteDto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.addRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dev.fizlrock.waterwalk.grpc.RouteDto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationTree} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.LocationTree.prototype.clearRoutesList = function() {
  return this.setRoutesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationId.prototype.toObject = function(opt_includeInstance) {
  return proto.dev.fizlrock.waterwalk.grpc.LocationId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dev.fizlrock.waterwalk.grpc.LocationId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.LocationId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationId}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dev.fizlrock.waterwalk.grpc.LocationId;
  return proto.dev.fizlrock.waterwalk.grpc.LocationId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.LocationId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationId}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dev.fizlrock.waterwalk.grpc.LocationId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.LocationId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.LocationId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationId.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationId} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.LocationId.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteId.prototype.toObject = function(opt_includeInstance) {
  return proto.dev.fizlrock.waterwalk.grpc.RouteId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dev.fizlrock.waterwalk.grpc.RouteId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.RouteId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteId}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dev.fizlrock.waterwalk.grpc.RouteId;
  return proto.dev.fizlrock.waterwalk.grpc.RouteId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.RouteId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteId}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dev.fizlrock.waterwalk.grpc.RouteId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.RouteId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.RouteId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteId.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteId} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.RouteId.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dev.fizlrock.waterwalk.grpc.Void.prototype.toObject = function(opt_includeInstance) {
  return proto.dev.fizlrock.waterwalk.grpc.Void.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dev.fizlrock.waterwalk.grpc.Void} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.Void.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.Void}
 */
proto.dev.fizlrock.waterwalk.grpc.Void.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dev.fizlrock.waterwalk.grpc.Void;
  return proto.dev.fizlrock.waterwalk.grpc.Void.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.Void} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.Void}
 */
proto.dev.fizlrock.waterwalk.grpc.Void.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dev.fizlrock.waterwalk.grpc.Void.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dev.fizlrock.waterwalk.grpc.Void.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.Void} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.Void.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.prototype.toObject = function(opt_includeInstance) {
  return proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq;
  return proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateLocationRq.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.prototype.toObject = function(opt_includeInstance) {
  return proto.dev.fizlrock.waterwalk.grpc.LocationDto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dev.fizlrock.waterwalk.grpc.LocationDto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationDto}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dev.fizlrock.waterwalk.grpc.LocationDto;
  return proto.dev.fizlrock.waterwalk.grpc.LocationDto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.LocationDto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationDto}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dev.fizlrock.waterwalk.grpc.LocationDto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.LocationDto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.LocationDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.LocationDto.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.toObject = function(opt_includeInstance) {
  return proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.toObject = function(includeInstance, msg) {
  var f, obj = {
    locationid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    distance: jspb.Message.getFieldWithDefault(msg, 4, 0),
    difficulty: jspb.Message.getFieldWithDefault(msg, 5, 0),
    duration: jspb.Message.getFieldWithDefault(msg, 6, 0),
    price: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq;
  return proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDistance(value);
      break;
    case 5:
      var value = /** @type {!proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty} */ (reader.readEnum());
      msg.setDifficulty(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getDifficulty();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional string locationId = 1;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.getLocationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.setLocationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string comment = 3;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 distance = 4;
 * @return {number}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.setDistance = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional RouteDifficulty difficulty = 5;
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.getDifficulty = function() {
  return /** @type {!proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.setDifficulty = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional int64 duration = 6;
 * @return {number}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 price = 7;
 * @return {number}
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.CreateRouteRq.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.toObject = function(opt_includeInstance) {
  return proto.dev.fizlrock.waterwalk.grpc.RouteDto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    distance: jspb.Message.getFieldWithDefault(msg, 4, 0),
    difficulty: jspb.Message.getFieldWithDefault(msg, 5, 0),
    duration: jspb.Message.getFieldWithDefault(msg, 6, 0),
    price: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dev.fizlrock.waterwalk.grpc.RouteDto;
  return proto.dev.fizlrock.waterwalk.grpc.RouteDto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDistance(value);
      break;
    case 5:
      var value = /** @type {!proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty} */ (reader.readEnum());
      msg.setDifficulty(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dev.fizlrock.waterwalk.grpc.RouteDto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getDifficulty();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string locationId = 8;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.getLocationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.setLocationid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string comment = 3;
 * @return {string}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 distance = 4;
 * @return {number}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.setDistance = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional RouteDifficulty difficulty = 5;
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.getDifficulty = function() {
  return /** @type {!proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.setDifficulty = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional int64 duration = 6;
 * @return {number}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 price = 7;
 * @return {number}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.dev.fizlrock.waterwalk.grpc.RouteDto} returns this
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDto.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * @enum {number}
 */
proto.dev.fizlrock.waterwalk.grpc.RouteDifficulty = {
  EASY: 0,
  MEDIUM: 1,
  HARD: 2
};

goog.object.extend(exports, proto.dev.fizlrock.waterwalk.grpc);
